

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon May 27 13:07:40 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 06/04/2022 GMT
    24                           ; 
    25                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F46K22 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   001206                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _linea
    63   001206  C0                 	db	192
    64   000000                     _ANSELB	set	3897
    65   000000                     _PORTB	set	3969
    66   000000                     _INTCONbits	set	4082
    67   000000                     _LATDbits	set	3980
    68   000000                     _TRISB	set	3987
    69   000000                     _TRISD	set	3989
    70   000000                     _ANSELD	set	3899
    71                           
    72                           ; #config settings
    73                           
    74                           	psect	cinit
    75   0011B2                     __pcinit:
    76                           	callstack 0
    77   0011B2                     start_initialization:
    78                           	callstack 0
    79   0011B2                     __initialization:
    80                           	callstack 0
    81                           
    82                           ; Initialize objects allocated to COMRAM (1 bytes)
    83                           ; load TBLPTR registers with __pidataCOMRAM
    84   0011B2  0E06               	movlw	low __pidataCOMRAM
    85   0011B4  6EF6               	movwf	tblptrl,c
    86   0011B6  0E12               	movlw	high __pidataCOMRAM
    87   0011B8  6EF7               	movwf	tblptrh,c
    88   0011BA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    89   0011BC  6EF8               	movwf	tblptru,c
    90   0011BE  0009               	tblrd		*+	;fetch initializer
    91   0011C0  CFF5 F00B          	movff	tablat,__pdataCOMRAM
    92   0011C4                     end_of_initialization:
    93                           	callstack 0
    94   0011C4                     __end_of__initialization:
    95                           	callstack 0
    96   0011C4  900C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    97   0011C6  920C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    98   0011C8  0E00               	movlw	low (__Lmediumconst shr (0+16))
    99   0011CA  6EF8               	movwf	tblptru,c
   100   0011CC  0100               	movlb	0
   101   0011CE  EFFD  F008         	goto	_main	;jump to C main() function
   102                           
   103                           	psect	dataCOMRAM
   104   00000B                     __pdataCOMRAM:
   105                           	callstack 0
   106   00000B                     _linea:
   107                           	callstack 0
   108   00000B                     	ds	1
   109                           
   110                           	psect	cstackCOMRAM
   111   000001                     __pcstackCOMRAM:
   112                           	callstack 0
   113   000001                     ??i2_enviarNibble:
   114   000001                     
   115                           ; 1 bytes @ 0x0
   116   000001                     	ds	2
   117   000003                     i2enviarNibble@dato:
   118                           	callstack 0
   119                           
   120                           ; 1 bytes @ 0x2
   121   000003                     	ds	1
   122   000004                     i2enviarByte@dato:
   123                           	callstack 0
   124                           
   125                           ; 1 bytes @ 0x3
   126   000004                     	ds	1
   127   000005                     isr_general@dato:
   128                           	callstack 0
   129                           
   130                           ; 1 bytes @ 0x4
   131   000005                     	ds	1
   132   000006                     ??_enviarNibble:
   133                           
   134                           ; 1 bytes @ 0x5
   135   000006                     	ds	2
   136   000008                     enviarNibble@dato:
   137                           	callstack 0
   138                           
   139                           ; 1 bytes @ 0x7
   140   000008                     	ds	1
   141   000009                     enviarByte@dato:
   142                           	callstack 0
   143                           
   144                           ; 1 bytes @ 0x8
   145   000009                     	ds	1
   146   00000A                     ??_setup:
   147                           
   148                           ; 1 bytes @ 0x9
   149   00000A                     	ds	1
   150   00000B                     
   151                           ; 1 bytes @ 0xA
   152 ;;
   153 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   154 ;;
   155 ;; *************** function _main *****************
   156 ;; Defined at:
   157 ;;		line 41 in file "teclado.c"
   158 ;; Parameters:    Size  Location     Type
   159 ;;		None
   160 ;; Auto vars:     Size  Location     Type
   161 ;;		None
   162 ;; Return value:  Size  Location     Type
   163 ;;                  1    wreg      void 
   164 ;; Registers used:
   165 ;;		wreg, status,2, status,0, cstack
   166 ;; Tracked objects:
   167 ;;		On entry : 0/0
   168 ;;		On exit  : 0/0
   169 ;;		Unchanged: 0/0
   170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   175 ;;Total ram usage:        0 bytes
   176 ;; Hardware stack levels required when called: 6
   177 ;; This function calls:
   178 ;;		_setup
   179 ;; This function is called by:
   180 ;;		Startup code after reset
   181 ;; This function uses a non-reentrant model
   182 ;;
   183                           
   184                           	psect	text0
   185   0011FA                     __ptext0:
   186                           	callstack 0
   187   0011FA                     _main:
   188                           	callstack 25
   189   0011FA                     
   190                           ;teclado.c: 43:     setup();
   191   0011FA  ECA5  F008         	call	_setup	;wreg free
   192   0011FE                     l29:
   193   0011FE  EFFF  F008         	goto	l29
   194   001202  EF86  F000         	goto	start
   195   001206                     __end_of_main:
   196                           	callstack 0
   197                           
   198 ;; *************** function _setup *****************
   199 ;; Defined at:
   200 ;;		line 116 in file "teclado.c"
   201 ;; Parameters:    Size  Location     Type
   202 ;;		None
   203 ;; Auto vars:     Size  Location     Type
   204 ;;		None
   205 ;; Return value:  Size  Location     Type
   206 ;;                  1    wreg      void 
   207 ;; Registers used:
   208 ;;		wreg, status,2, status,0, cstack
   209 ;; Tracked objects:
   210 ;;		On entry : 0/0
   211 ;;		On exit  : 0/0
   212 ;;		Unchanged: 0/0
   213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   216 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   217 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   218 ;;Total ram usage:        1 bytes
   219 ;; Hardware stack levels used: 1
   220 ;; Hardware stack levels required when called: 5
   221 ;; This function calls:
   222 ;;		_enviarByte
   223 ;;		_enviarNibble
   224 ;; This function is called by:
   225 ;;		_main
   226 ;; This function uses a non-reentrant model
   227 ;;
   228                           
   229                           	psect	text1
   230   00114A                     __ptext1:
   231                           	callstack 0
   232   00114A                     _setup:
   233                           	callstack 25
   234   00114A                     
   235                           ;teclado.c: 118:     TRISB = 0xFF;
   236   00114A  6893               	setf	147,c	;volatile
   237   00114C                     
   238                           ;teclado.c: 119:     ANSELB = 0x00;
   239   00114C  0E00               	movlw	0
   240   00114E  010F               	movlb	15	; () banked
   241   001150  6F39               	movwf	57,b	;volatile
   242                           
   243                           ;teclado.c: 121:     TRISD = 0x00;
   244   001152  0E00               	movlw	0
   245   001154  6E95               	movwf	149,c	;volatile
   246                           
   247                           ;teclado.c: 122:     ANSELD = 0X00;
   248   001156  0E00               	movlw	0
   249   001158  6F3B               	movwf	59,b	;volatile
   250   00115A                     
   251                           ; BSR set to: 15
   252                           ;teclado.c: 124:     INTCONbits.INT0E = 1;
   253   00115A  88F2               	bsf	242,4,c	;volatile
   254   00115C                     
   255                           ; BSR set to: 15
   256                           ;teclado.c: 125:     INTCONbits.INT0F = 0;
   257   00115C  92F2               	bcf	242,1,c	;volatile
   258   00115E                     
   259                           ; BSR set to: 15
   260                           ;teclado.c: 126:     INTCONbits.GIE = 1;
   261   00115E  8EF2               	bsf	242,7,c	;volatile
   262   001160                     
   263                           ; BSR set to: 15
   264                           ;teclado.c: 129:     LATDbits.LATD4 = 0;
   265   001160  988C               	bcf	140,4,c	;volatile
   266   001162                     
   267                           ; BSR set to: 15
   268                           ;teclado.c: 130:     LATDbits.LATD5 = 0;
   269   001162  9A8C               	bcf	140,5,c	;volatile
   270   001164                     
   271                           ; BSR set to: 15
   272                           ;teclado.c: 131:     _delay((unsigned long)((20)*(8000000/4000.0)));
   273   001164  0E34               	movlw	52
   274   001166  6E0A               	movwf	??_setup^0,c
   275   001168  0EF2               	movlw	242
   276   00116A                     u37:
   277   00116A  2EE8               	decfsz	wreg,f,c
   278   00116C  D7FE               	bra	u37
   279   00116E  2E0A               	decfsz	??_setup^0,f,c
   280   001170  D7FC               	bra	u37
   281   001172                     
   282                           ;teclado.c: 132:     enviarNibble(0x03);
   283   001172  0E03               	movlw	3
   284   001174  EC01  F008         	call	_enviarNibble
   285   001178                     
   286                           ;teclado.c: 133:     enviarNibble(0x03);
   287   001178  0E03               	movlw	3
   288   00117A  EC01  F008         	call	_enviarNibble
   289   00117E                     
   290                           ;teclado.c: 134:     enviarNibble(0x03);
   291   00117E  0E03               	movlw	3
   292   001180  EC01  F008         	call	_enviarNibble
   293   001184                     
   294                           ;teclado.c: 137:     enviarNibble(0x02);
   295   001184  0E02               	movlw	2
   296   001186  EC01  F008         	call	_enviarNibble
   297   00118A                     
   298                           ;teclado.c: 138:     enviarByte(0x20);
   299   00118A  0E20               	movlw	32
   300   00118C  ECE9  F008         	call	_enviarByte
   301   001190                     
   302                           ;teclado.c: 139:     enviarByte(0x08);
   303   001190  0E08               	movlw	8
   304   001192  ECE9  F008         	call	_enviarByte
   305   001196                     
   306                           ;teclado.c: 140:     enviarByte(0x01);
   307   001196  0E01               	movlw	1
   308   001198  ECE9  F008         	call	_enviarByte
   309   00119C                     
   310                           ;teclado.c: 141:     enviarByte(0x06);
   311   00119C  0E06               	movlw	6
   312   00119E  ECE9  F008         	call	_enviarByte
   313   0011A2                     
   314                           ;teclado.c: 142:     enviarByte(0x02);
   315   0011A2  0E02               	movlw	2
   316   0011A4  ECE9  F008         	call	_enviarByte
   317   0011A8                     
   318                           ;teclado.c: 145:     enviarByte(0x0F);
   319   0011A8  0E0F               	movlw	15
   320   0011AA  ECE9  F008         	call	_enviarByte
   321   0011AE                     
   322                           ;teclado.c: 147:     LATDbits.LATD4 = 1;
   323   0011AE  888C               	bsf	140,4,c	;volatile
   324   0011B0  0012               	return		;funcret
   325   0011B2                     __end_of_setup:
   326                           	callstack 0
   327                           
   328 ;; *************** function _enviarByte *****************
   329 ;; Defined at:
   330 ;;		line 162 in file "teclado.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;  dato            1    wreg     unsigned char 
   333 ;; Auto vars:     Size  Location     Type
   334 ;;  dato            1    8[COMRAM] unsigned char 
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2, status,0, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   347 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   348 ;;Total ram usage:        1 bytes
   349 ;; Hardware stack levels used: 1
   350 ;; Hardware stack levels required when called: 4
   351 ;; This function calls:
   352 ;;		_enviarNibble
   353 ;; This function is called by:
   354 ;;		_setup
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358                           	psect	text2
   359   0011D2                     __ptext2:
   360                           	callstack 0
   361   0011D2                     _enviarByte:
   362                           	callstack 25
   363                           
   364                           ;incstack = 0
   365                           ;enviarByte@dato stored from wreg
   366   0011D2  6E09               	movwf	enviarByte@dato^0,c
   367   0011D4                     
   368                           ;teclado.c: 163:     enviarNibble(dato >> 4);
   369   0011D4  3809               	swapf	enviarByte@dato^0,w,c
   370   0011D6  0B0F               	andlw	15
   371   0011D8  EC01  F008         	call	_enviarNibble
   372                           
   373                           ;teclado.c: 164:     enviarNibble(dato & 0x0F);
   374   0011DC  5009               	movf	enviarByte@dato^0,w,c
   375   0011DE  0B0F               	andlw	15
   376   0011E0  EC01  F008         	call	_enviarNibble
   377   0011E4  0012               	return		;funcret
   378   0011E6                     __end_of_enviarByte:
   379                           	callstack 0
   380                           
   381 ;; *************** function _enviarNibble *****************
   382 ;; Defined at:
   383 ;;		line 150 in file "teclado.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;  dato            1    wreg     unsigned char 
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  dato            1    7[COMRAM] unsigned char 
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, status,2, status,0
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   398 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   399 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   400 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;Total ram usage:        3 bytes
   402 ;; Hardware stack levels used: 1
   403 ;; Hardware stack levels required when called: 3
   404 ;; This function calls:
   405 ;;		Nothing
   406 ;; This function is called by:
   407 ;;		_setup
   408 ;;		_enviarByte
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text3
   413   001002                     __ptext3:
   414                           	callstack 0
   415   001002                     _enviarNibble:
   416                           	callstack 26
   417                           
   418                           ;incstack = 0
   419                           ;enviarNibble@dato stored from wreg
   420   001002  6E08               	movwf	enviarNibble@dato^0,c
   421   001004                     
   422                           ;teclado.c: 151:     LATDbits.LATD0 = (dato >> 0) & 0x01;
   423   001004  C008  F006         	movff	enviarNibble@dato,??_enviarNibble
   424   001008  0E01               	movlw	1
   425   00100A  1606               	andwf	??_enviarNibble^0,f,c
   426   00100C  508C               	movf	140,w,c	;volatile
   427   00100E  1806               	xorwf	??_enviarNibble^0,w,c
   428   001010  0BFE               	andlw	-2
   429   001012  1806               	xorwf	??_enviarNibble^0,w,c
   430   001014  6E8C               	movwf	140,c	;volatile
   431                           
   432                           ;teclado.c: 152:     LATDbits.LATD1 = (dato >> 1) & 0x01;
   433   001016  C008  F006         	movff	enviarNibble@dato,??_enviarNibble
   434   00101A  90D8               	bcf	status,0,c
   435   00101C  3206               	rrcf	??_enviarNibble^0,f,c
   436   00101E  0E01               	movlw	1
   437   001020  1606               	andwf	??_enviarNibble^0,f,c
   438   001022  4606               	rlncf	??_enviarNibble^0,f,c
   439   001024  508C               	movf	140,w,c	;volatile
   440   001026  1806               	xorwf	??_enviarNibble^0,w,c
   441   001028  0BFD               	andlw	-3
   442   00102A  1806               	xorwf	??_enviarNibble^0,w,c
   443   00102C  6E8C               	movwf	140,c	;volatile
   444                           
   445                           ;teclado.c: 153:     LATDbits.LATD2 = (dato >> 2) & 0x01;
   446   00102E  C008  F006         	movff	enviarNibble@dato,??_enviarNibble
   447   001032  90D8               	bcf	status,0,c
   448   001034  3206               	rrcf	??_enviarNibble^0,f,c
   449   001036  90D8               	bcf	status,0,c
   450   001038  3206               	rrcf	??_enviarNibble^0,f,c
   451   00103A  0E01               	movlw	1
   452   00103C  1606               	andwf	??_enviarNibble^0,f,c
   453   00103E  4606               	rlncf	??_enviarNibble^0,f,c
   454   001040  4606               	rlncf	??_enviarNibble^0,f,c
   455   001042  508C               	movf	140,w,c	;volatile
   456   001044  1806               	xorwf	??_enviarNibble^0,w,c
   457   001046  0BFB               	andlw	-5
   458   001048  1806               	xorwf	??_enviarNibble^0,w,c
   459   00104A  6E8C               	movwf	140,c	;volatile
   460                           
   461                           ;teclado.c: 154:     LATDbits.LATD3 = (dato >> 3) & 0x01;
   462   00104C  C008  F006         	movff	enviarNibble@dato,??_enviarNibble
   463   001050  90D8               	bcf	status,0,c
   464   001052  3206               	rrcf	??_enviarNibble^0,f,c
   465   001054  90D8               	bcf	status,0,c
   466   001056  3206               	rrcf	??_enviarNibble^0,f,c
   467   001058  90D8               	bcf	status,0,c
   468   00105A  3206               	rrcf	??_enviarNibble^0,f,c
   469   00105C  0E01               	movlw	1
   470   00105E  1606               	andwf	??_enviarNibble^0,f,c
   471   001060  4606               	rlncf	??_enviarNibble^0,f,c
   472   001062  4606               	rlncf	??_enviarNibble^0,f,c
   473   001064  4606               	rlncf	??_enviarNibble^0,f,c
   474   001066  508C               	movf	140,w,c	;volatile
   475   001068  1806               	xorwf	??_enviarNibble^0,w,c
   476   00106A  0BF7               	andlw	-9
   477   00106C  1806               	xorwf	??_enviarNibble^0,w,c
   478   00106E  6E8C               	movwf	140,c	;volatile
   479   001070                     
   480                           ;teclado.c: 156:     LATDbits.LATD6 = 1;
   481   001070  8C8C               	bsf	140,6,c	;volatile
   482   001072                     
   483                           ;teclado.c: 157:     _delay((unsigned long)((100)*(8000000/4000.0)));
   484   001072  0E02               	movlw	2
   485   001074  6E07               	movwf	(??_enviarNibble+1)^0,c
   486   001076  0E04               	movlw	4
   487   001078  6E06               	movwf	??_enviarNibble^0,c
   488   00107A  0EBA               	movlw	186
   489   00107C                     u47:
   490   00107C  2EE8               	decfsz	wreg,f,c
   491   00107E  D7FE               	bra	u47
   492   001080  2E06               	decfsz	??_enviarNibble^0,f,c
   493   001082  D7FC               	bra	u47
   494   001084  2E07               	decfsz	(??_enviarNibble+1)^0,f,c
   495   001086  D7FA               	bra	u47
   496   001088  D000               	nop2	
   497   00108A                     
   498                           ;teclado.c: 158:     LATDbits.LATD6 = 0;
   499   00108A  9C8C               	bcf	140,6,c	;volatile
   500   00108C                     
   501                           ;teclado.c: 159:     _delay((unsigned long)((100)*(8000000/4000.0)));
   502   00108C  0E02               	movlw	2
   503   00108E  6E07               	movwf	(??_enviarNibble+1)^0,c
   504   001090  0E04               	movlw	4
   505   001092  6E06               	movwf	??_enviarNibble^0,c
   506   001094  0EBA               	movlw	186
   507   001096                     u57:
   508   001096  2EE8               	decfsz	wreg,f,c
   509   001098  D7FE               	bra	u57
   510   00109A  2E06               	decfsz	??_enviarNibble^0,f,c
   511   00109C  D7FC               	bra	u57
   512   00109E  2E07               	decfsz	(??_enviarNibble+1)^0,f,c
   513   0010A0  D7FA               	bra	u57
   514   0010A2  D000               	nop2	
   515   0010A4  0012               	return		;funcret
   516   0010A6                     __end_of_enviarNibble:
   517                           	callstack 0
   518                           
   519 ;; *************** function _isr_general *****************
   520 ;; Defined at:
   521 ;;		line 52 in file "teclado.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;  dato            1    4[COMRAM] unsigned char 
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		wreg, status,2, status,0, cstack
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   538 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;Total ram usage:        1 bytes
   540 ;; Hardware stack levels used: 1
   541 ;; Hardware stack levels required when called: 2
   542 ;; This function calls:
   543 ;;		i2_enviarByte
   544 ;; This function is called by:
   545 ;;		Interrupt level 2
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	intcode
   550   000008                     __pintcode:
   551                           	callstack 0
   552   000008                     _isr_general:
   553                           	callstack 25
   554                           
   555                           ;incstack = 0
   556   000008  820C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   557   00000A                     
   558                           ;teclado.c: 53:     INTCONbits.INT0E = 0;
   559   00000A  98F2               	bcf	242,4,c	;volatile
   560                           
   561                           ;teclado.c: 54:     INTCONbits.INT0F = 0;
   562   00000C  92F2               	bcf	242,1,c	;volatile
   563   00000E                     
   564                           ;teclado.c: 56:     unsigned char dato = PORTB >> 4;
   565   00000E  3881               	swapf	129,w,c	;volatile
   566   000010  0B0F               	andlw	15
   567   000012  6E05               	movwf	isr_general@dato^0,c
   568                           
   569                           ;teclado.c: 57:     switch (dato){
   570   000014  EF54  F000         	goto	i2l891
   571   000018                     i2l857:
   572                           
   573                           ;teclado.c: 59:             enviarByte(0x30);
   574   000018  0E30               	movlw	48
   575   00001A  ECF3  F008         	call	i2_enviarByte
   576                           
   577                           ;teclado.c: 60:             break;
   578   00001E  EF83  F000         	goto	i2l39
   579   000022                     i2l859:
   580                           
   581                           ;teclado.c: 63:             enviarByte(0x31);
   582   000022  0E31               	movlw	49
   583   000024  ECF3  F008         	call	i2_enviarByte
   584                           
   585                           ;teclado.c: 64:             break;
   586   000028  EF83  F000         	goto	i2l39
   587   00002C                     i2l861:
   588                           
   589                           ;teclado.c: 67:             enviarByte(0x32);
   590   00002C  0E32               	movlw	50
   591   00002E  ECF3  F008         	call	i2_enviarByte
   592                           
   593                           ;teclado.c: 68:             break;
   594   000032  EF83  F000         	goto	i2l39
   595   000036                     i2l863:
   596                           
   597                           ;teclado.c: 71:             enviarByte(0x33);
   598   000036  0E33               	movlw	51
   599   000038  ECF3  F008         	call	i2_enviarByte
   600                           
   601                           ;teclado.c: 72:             break;
   602   00003C  EF83  F000         	goto	i2l39
   603   000040                     i2l865:
   604                           
   605                           ;teclado.c: 75:             enviarByte(0x34);
   606   000040  0E34               	movlw	52
   607   000042  ECF3  F008         	call	i2_enviarByte
   608                           
   609                           ;teclado.c: 76:             break;
   610   000046  EF83  F000         	goto	i2l39
   611   00004A                     i2l867:
   612                           
   613                           ;teclado.c: 79:             enviarByte(0x35);
   614   00004A  0E35               	movlw	53
   615   00004C  ECF3  F008         	call	i2_enviarByte
   616                           
   617                           ;teclado.c: 80:             break;
   618   000050  EF83  F000         	goto	i2l39
   619   000054                     i2l869:
   620                           
   621                           ;teclado.c: 83:              enviarByte(0x36);
   622   000054  0E36               	movlw	54
   623   000056  ECF3  F008         	call	i2_enviarByte
   624                           
   625                           ;teclado.c: 84:             break;
   626   00005A  EF83  F000         	goto	i2l39
   627   00005E                     i2l871:
   628                           
   629                           ;teclado.c: 87:             enviarByte(0x37);
   630   00005E  0E37               	movlw	55
   631   000060  ECF3  F008         	call	i2_enviarByte
   632                           
   633                           ;teclado.c: 88:             break;
   634   000064  EF83  F000         	goto	i2l39
   635   000068                     i2l873:
   636                           
   637                           ;teclado.c: 91:             enviarByte(0x38);
   638   000068  0E38               	movlw	56
   639   00006A  ECF3  F008         	call	i2_enviarByte
   640                           
   641                           ;teclado.c: 92:             break;
   642   00006E  EF83  F000         	goto	i2l39
   643   000072                     i2l875:
   644                           
   645                           ;teclado.c: 95:             enviarByte(0x39);
   646   000072  0E39               	movlw	57
   647   000074  ECF3  F008         	call	i2_enviarByte
   648                           
   649                           ;teclado.c: 96:             break;
   650   000078  EF83  F000         	goto	i2l39
   651   00007C                     i2l877:
   652                           
   653                           ;teclado.c: 99:             if(linea == 0xC0){
   654   00007C  0EC0               	movlw	192
   655   00007E  180B               	xorwf	_linea^0,w,c
   656   000080  A4D8               	btfss	status,2,c
   657   000082  EF45  F000         	goto	i2u2_41
   658   000086  EF47  F000         	goto	i2u2_40
   659   00008A                     i2u2_41:
   660   00008A  EF4B  F000         	goto	i2l881
   661   00008E                     i2u2_40:
   662   00008E                     
   663                           ;teclado.c: 100:                 linea = 0x80;
   664   00008E  0E80               	movlw	128
   665   000090  6E0B               	movwf	_linea^0,c
   666                           
   667                           ;teclado.c: 101:             }else {
   668   000092  EF4D  F000         	goto	i2l883
   669   000096                     i2l881:
   670                           
   671                           ;teclado.c: 102:                 linea = 0xC0;
   672   000096  0EC0               	movlw	192
   673   000098  6E0B               	movwf	_linea^0,c
   674   00009A                     i2l883:
   675                           
   676                           ;teclado.c: 105:             LATDbits.LATD4 = 0;
   677   00009A  988C               	bcf	140,4,c	;volatile
   678   00009C                     
   679                           ;teclado.c: 106:             enviarByte(linea);
   680   00009C  500B               	movf	_linea^0,w,c
   681   00009E  ECF3  F008         	call	i2_enviarByte
   682   0000A2                     
   683                           ;teclado.c: 107:             LATDbits.LATD4 = 1;
   684   0000A2  888C               	bsf	140,4,c	;volatile
   685                           
   686                           ;teclado.c: 109:             break;
   687   0000A4  EF83  F000         	goto	i2l39
   688   0000A8                     i2l891:
   689   0000A8  5005               	movf	isr_general@dato^0,w,c
   690                           
   691                           ; Switch size 1, requested type "simple"
   692                           ; Number of cases is 11, Range of values is 0 to 15
   693                           ; switch strategies available:
   694                           ; Name         Instructions Cycles
   695                           ; simple_byte           34    18 (average)
   696                           ;	Chosen strategy is simple_byte
   697   0000AA  0A00               	xorlw	0	; case 0
   698   0000AC  B4D8               	btfsc	status,2,c
   699   0000AE  EF2F  F000         	goto	i2l871
   700   0000B2  0A01               	xorlw	1	; case 1
   701   0000B4  B4D8               	btfsc	status,2,c
   702   0000B6  EF34  F000         	goto	i2l873
   703   0000BA  0A03               	xorlw	3	; case 2
   704   0000BC  B4D8               	btfsc	status,2,c
   705   0000BE  EF39  F000         	goto	i2l875
   706   0000C2  0A06               	xorlw	6	; case 4
   707   0000C4  B4D8               	btfsc	status,2,c
   708   0000C6  EF20  F000         	goto	i2l865
   709   0000CA  0A01               	xorlw	1	; case 5
   710   0000CC  B4D8               	btfsc	status,2,c
   711   0000CE  EF25  F000         	goto	i2l867
   712   0000D2  0A03               	xorlw	3	; case 6
   713   0000D4  B4D8               	btfsc	status,2,c
   714   0000D6  EF2A  F000         	goto	i2l869
   715   0000DA  0A0E               	xorlw	14	; case 8
   716   0000DC  B4D8               	btfsc	status,2,c
   717   0000DE  EF11  F000         	goto	i2l859
   718   0000E2  0A01               	xorlw	1	; case 9
   719   0000E4  B4D8               	btfsc	status,2,c
   720   0000E6  EF16  F000         	goto	i2l861
   721   0000EA  0A03               	xorlw	3	; case 10
   722   0000EC  B4D8               	btfsc	status,2,c
   723   0000EE  EF1B  F000         	goto	i2l863
   724   0000F2  0A07               	xorlw	7	; case 13
   725   0000F4  B4D8               	btfsc	status,2,c
   726   0000F6  EF0C  F000         	goto	i2l857
   727   0000FA  0A02               	xorlw	2	; case 15
   728   0000FC  B4D8               	btfsc	status,2,c
   729   0000FE  EF3E  F000         	goto	i2l877
   730   000102  EF83  F000         	goto	i2l39
   731   000106                     i2l39:
   732                           
   733                           ;teclado.c: 113:     INTCONbits.INT0E = 1;
   734   000106  88F2               	bsf	242,4,c	;volatile
   735   000108  920C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   736   00010A  0011               	retfie		f
   737   00010C                     __end_of_isr_general:
   738                           	callstack 0
   739                           
   740 ;; *************** function i2_enviarByte *****************
   741 ;; Defined at:
   742 ;;		line 162 in file "teclado.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  dato            1    wreg     unsigned char 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  dato            1    3[COMRAM] unsigned char 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;Total ram usage:        1 bytes
   761 ;; Hardware stack levels used: 1
   762 ;; Hardware stack levels required when called: 1
   763 ;; This function calls:
   764 ;;		i2_enviarNibble
   765 ;; This function is called by:
   766 ;;		_isr_general
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           	psect	text5
   771   0011E6                     __ptext5:
   772                           	callstack 0
   773   0011E6                     i2_enviarByte:
   774                           	callstack 25
   775                           
   776                           ;incstack = 0
   777                           ;i2enviarByte@dato stored from wreg
   778   0011E6  6E04               	movwf	i2enviarByte@dato^0,c
   779   0011E8                     
   780                           ;teclado.c: 163:     enviarNibble(dato >> 4);
   781   0011E8  3804               	swapf	i2enviarByte@dato^0,w,c
   782   0011EA  0B0F               	andlw	15
   783   0011EC  EC53  F008         	call	i2_enviarNibble
   784                           
   785                           ;teclado.c: 164:     enviarNibble(dato & 0x0F);
   786   0011F0  5004               	movf	i2enviarByte@dato^0,w,c
   787   0011F2  0B0F               	andlw	15
   788   0011F4  EC53  F008         	call	i2_enviarNibble
   789   0011F8  0012               	return		;funcret
   790   0011FA                     __end_ofi2_enviarByte:
   791                           	callstack 0
   792                           
   793 ;; *************** function i2_enviarNibble *****************
   794 ;; Defined at:
   795 ;;		line 150 in file "teclado.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;  dato            1    wreg     unsigned char 
   798 ;; Auto vars:     Size  Location     Type
   799 ;;  dato            1    2[COMRAM] unsigned char 
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, status,2, status,0
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;Total ram usage:        3 bytes
   814 ;; Hardware stack levels used: 1
   815 ;; This function calls:
   816 ;;		Nothing
   817 ;; This function is called by:
   818 ;;		i2_enviarByte
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           	psect	text6
   823   0010A6                     __ptext6:
   824                           	callstack 0
   825   0010A6                     i2_enviarNibble:
   826                           	callstack 25
   827                           
   828                           ;incstack = 0
   829                           ;i2enviarNibble@dato stored from wreg
   830   0010A6  6E03               	movwf	i2enviarNibble@dato^0,c
   831   0010A8                     
   832                           ;teclado.c: 151:     LATDbits.LATD0 = (dato >> 0) & 0x01;
   833   0010A8  C003  F001         	movff	i2enviarNibble@dato,??i2_enviarNibble
   834   0010AC  0E01               	movlw	1
   835   0010AE  1601               	andwf	??i2_enviarNibble^0,f,c
   836   0010B0  508C               	movf	140,w,c	;volatile
   837   0010B2  1801               	xorwf	??i2_enviarNibble^0,w,c
   838   0010B4  0BFE               	andlw	-2
   839   0010B6  1801               	xorwf	??i2_enviarNibble^0,w,c
   840   0010B8  6E8C               	movwf	140,c	;volatile
   841                           
   842                           ;teclado.c: 152:     LATDbits.LATD1 = (dato >> 1) & 0x01;
   843   0010BA  C003  F001         	movff	i2enviarNibble@dato,??i2_enviarNibble
   844   0010BE  90D8               	bcf	status,0,c
   845   0010C0  3201               	rrcf	??i2_enviarNibble^0,f,c
   846   0010C2  0E01               	movlw	1
   847   0010C4  1601               	andwf	??i2_enviarNibble^0,f,c
   848   0010C6  4601               	rlncf	??i2_enviarNibble^0,f,c
   849   0010C8  508C               	movf	140,w,c	;volatile
   850   0010CA  1801               	xorwf	??i2_enviarNibble^0,w,c
   851   0010CC  0BFD               	andlw	-3
   852   0010CE  1801               	xorwf	??i2_enviarNibble^0,w,c
   853   0010D0  6E8C               	movwf	140,c	;volatile
   854                           
   855                           ;teclado.c: 153:     LATDbits.LATD2 = (dato >> 2) & 0x01;
   856   0010D2  C003  F001         	movff	i2enviarNibble@dato,??i2_enviarNibble
   857   0010D6  90D8               	bcf	status,0,c
   858   0010D8  3201               	rrcf	??i2_enviarNibble^0,f,c
   859   0010DA  90D8               	bcf	status,0,c
   860   0010DC  3201               	rrcf	??i2_enviarNibble^0,f,c
   861   0010DE  0E01               	movlw	1
   862   0010E0  1601               	andwf	??i2_enviarNibble^0,f,c
   863   0010E2  4601               	rlncf	??i2_enviarNibble^0,f,c
   864   0010E4  4601               	rlncf	??i2_enviarNibble^0,f,c
   865   0010E6  508C               	movf	140,w,c	;volatile
   866   0010E8  1801               	xorwf	??i2_enviarNibble^0,w,c
   867   0010EA  0BFB               	andlw	-5
   868   0010EC  1801               	xorwf	??i2_enviarNibble^0,w,c
   869   0010EE  6E8C               	movwf	140,c	;volatile
   870                           
   871                           ;teclado.c: 154:     LATDbits.LATD3 = (dato >> 3) & 0x01;
   872   0010F0  C003  F001         	movff	i2enviarNibble@dato,??i2_enviarNibble
   873   0010F4  90D8               	bcf	status,0,c
   874   0010F6  3201               	rrcf	??i2_enviarNibble^0,f,c
   875   0010F8  90D8               	bcf	status,0,c
   876   0010FA  3201               	rrcf	??i2_enviarNibble^0,f,c
   877   0010FC  90D8               	bcf	status,0,c
   878   0010FE  3201               	rrcf	??i2_enviarNibble^0,f,c
   879   001100  0E01               	movlw	1
   880   001102  1601               	andwf	??i2_enviarNibble^0,f,c
   881   001104  4601               	rlncf	??i2_enviarNibble^0,f,c
   882   001106  4601               	rlncf	??i2_enviarNibble^0,f,c
   883   001108  4601               	rlncf	??i2_enviarNibble^0,f,c
   884   00110A  508C               	movf	140,w,c	;volatile
   885   00110C  1801               	xorwf	??i2_enviarNibble^0,w,c
   886   00110E  0BF7               	andlw	-9
   887   001110  1801               	xorwf	??i2_enviarNibble^0,w,c
   888   001112  6E8C               	movwf	140,c	;volatile
   889   001114                     
   890                           ;teclado.c: 156:     LATDbits.LATD6 = 1;
   891   001114  8C8C               	bsf	140,6,c	;volatile
   892   001116                     
   893                           ;teclado.c: 157:     _delay((unsigned long)((100)*(8000000/4000.0)));
   894   001116  0E02               	movlw	2
   895   001118  6E02               	movwf	(??i2_enviarNibble+1)^0,c
   896   00111A  0E04               	movlw	4
   897   00111C  6E01               	movwf	??i2_enviarNibble^0,c
   898   00111E  0EBA               	movlw	186
   899   001120                     i2u6_47:
   900   001120  2EE8               	decfsz	wreg,f,c
   901   001122  D7FE               	bra	i2u6_47
   902   001124  2E01               	decfsz	??i2_enviarNibble^0,f,c
   903   001126  D7FC               	bra	i2u6_47
   904   001128  2E02               	decfsz	(??i2_enviarNibble+1)^0,f,c
   905   00112A  D7FA               	bra	i2u6_47
   906   00112C  D000               	nop2	
   907   00112E                     
   908                           ;teclado.c: 158:     LATDbits.LATD6 = 0;
   909   00112E  9C8C               	bcf	140,6,c	;volatile
   910   001130                     
   911                           ;teclado.c: 159:     _delay((unsigned long)((100)*(8000000/4000.0)));
   912   001130  0E02               	movlw	2
   913   001132  6E02               	movwf	(??i2_enviarNibble+1)^0,c
   914   001134  0E04               	movlw	4
   915   001136  6E01               	movwf	??i2_enviarNibble^0,c
   916   001138  0EBA               	movlw	186
   917   00113A                     i2u7_47:
   918   00113A  2EE8               	decfsz	wreg,f,c
   919   00113C  D7FE               	bra	i2u7_47
   920   00113E  2E01               	decfsz	??i2_enviarNibble^0,f,c
   921   001140  D7FC               	bra	i2u7_47
   922   001142  2E02               	decfsz	(??i2_enviarNibble+1)^0,f,c
   923   001144  D7FA               	bra	i2u7_47
   924   001146  D000               	nop2	
   925   001148  0012               	return		;funcret
   926   00114A                     __end_ofi2_enviarNibble:
   927                           	callstack 0
   928                           
   929                           	psect	smallconst
   930   001000                     __psmallconst:
   931                           	callstack 0
   932   001000  00                 	db	0
   933   001001  00                 	db	0	; dummy byte at the end
   934   000000                     
   935                           	psect	rparam
   936   000000                     
   937                           	psect	temp
   938   00000C                     btemp:
   939                           	callstack 0
   940   00000C                     	ds	1
   941   000000                     int$flags	set	btemp
   942   000000                     wtemp8	set	btemp+1
   943   000000                     ttemp5	set	btemp+1
   944   000000                     ttemp6	set	btemp+4
   945   000000                     ttemp7	set	btemp+8
   946                           
   947                           	psect	idloc
   948                           
   949                           ;Config register IDLOC0 @ 0x200000
   950                           ;	unspecified, using default values
   951   200000                     	org	2097152
   952   200000  FF                 	db	255
   953                           
   954                           ;Config register IDLOC1 @ 0x200001
   955                           ;	unspecified, using default values
   956   200001                     	org	2097153
   957   200001  FF                 	db	255
   958                           
   959                           ;Config register IDLOC2 @ 0x200002
   960                           ;	unspecified, using default values
   961   200002                     	org	2097154
   962   200002  FF                 	db	255
   963                           
   964                           ;Config register IDLOC3 @ 0x200003
   965                           ;	unspecified, using default values
   966   200003                     	org	2097155
   967   200003  FF                 	db	255
   968                           
   969                           ;Config register IDLOC4 @ 0x200004
   970                           ;	unspecified, using default values
   971   200004                     	org	2097156
   972   200004  FF                 	db	255
   973                           
   974                           ;Config register IDLOC5 @ 0x200005
   975                           ;	unspecified, using default values
   976   200005                     	org	2097157
   977   200005  FF                 	db	255
   978                           
   979                           ;Config register IDLOC6 @ 0x200006
   980                           ;	unspecified, using default values
   981   200006                     	org	2097158
   982   200006  FF                 	db	255
   983                           
   984                           ;Config register IDLOC7 @ 0x200007
   985                           ;	unspecified, using default values
   986   200007                     	org	2097159
   987   200007  FF                 	db	255
   988                           
   989                           	psect	config
   990                           
   991                           ; Padding undefined space
   992   300000                     	org	3145728
   993   300000  FF                 	db	255
   994                           
   995                           ;Config register CONFIG1H @ 0x300001
   996                           ;	Oscillator Selection bits
   997                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
   998                           ;	4X PLL Enable
   999                           ;	PLLCFG = 0x0, unprogrammed default
  1000                           ;	Primary clock enable bit
  1001                           ;	PRICLKEN = 0x1, unprogrammed default
  1002                           ;	Fail-Safe Clock Monitor Enable bit
  1003                           ;	FCMEN = 0x0, unprogrammed default
  1004                           ;	Internal/External Oscillator Switchover bit
  1005                           ;	IESO = 0x0, unprogrammed default
  1006   300001                     	org	3145729
  1007   300001  22                 	db	34
  1008                           
  1009                           ;Config register CONFIG2L @ 0x300002
  1010                           ;	Power-up Timer Enable bit
  1011                           ;	PWRTEN = ON, Power up timer enabled
  1012                           ;	Brown-out Reset Enable bits
  1013                           ;	BOREN = 0x3, unprogrammed default
  1014                           ;	Brown Out Reset Voltage bits
  1015                           ;	BORV = 0x3, unprogrammed default
  1016   300002                     	org	3145730
  1017   300002  1E                 	db	30
  1018                           
  1019                           ;Config register CONFIG2H @ 0x300003
  1020                           ;	Watchdog Timer Enable bits
  1021                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1022                           ;	Watchdog Timer Postscale Select bits
  1023                           ;	WDTPS = 0xF, unprogrammed default
  1024   300003                     	org	3145731
  1025   300003  3C                 	db	60
  1026                           
  1027                           ; Padding undefined space
  1028   300004                     	org	3145732
  1029   300004  FF                 	db	255
  1030                           
  1031                           ;Config register CONFIG3H @ 0x300005
  1032                           ;	CCP2 MUX bit
  1033                           ;	CCP2MX = 0x1, unprogrammed default
  1034                           ;	PORTB A/D Enable bit
  1035                           ;	PBADEN = 0x1, unprogrammed default
  1036                           ;	P3A/CCP3 Mux bit
  1037                           ;	CCP3MX = 0x1, unprogrammed default
  1038                           ;	HFINTOSC Fast Start-up
  1039                           ;	HFOFST = 0x1, unprogrammed default
  1040                           ;	Timer3 Clock input mux bit
  1041                           ;	T3CMX = 0x1, unprogrammed default
  1042                           ;	ECCP2 B output mux bit
  1043                           ;	P2BMX = 0x1, unprogrammed default
  1044                           ;	MCLR Pin Enable bit
  1045                           ;	MCLRE = INTMCLR, RE3 input pin enabled; MCLR disabled
  1046   300005                     	org	3145733
  1047   300005  3F                 	db	63
  1048                           
  1049                           ;Config register CONFIG4L @ 0x300006
  1050                           ;	unspecified, using default values
  1051                           ;	Stack Full/Underflow Reset Enable bit
  1052                           ;	STVREN = 0x1, unprogrammed default
  1053                           ;	Single-Supply ICSP Enable bit
  1054                           ;	LVP = 0x1, unprogrammed default
  1055                           ;	Extended Instruction Set Enable bit
  1056                           ;	XINST = 0x0, unprogrammed default
  1057                           ;	Background Debug
  1058                           ;	DEBUG = 0x1, unprogrammed default
  1059   300006                     	org	3145734
  1060   300006  85                 	db	133
  1061                           
  1062                           ; Padding undefined space
  1063   300007                     	org	3145735
  1064   300007  FF                 	db	255
  1065                           
  1066                           ;Config register CONFIG5L @ 0x300008
  1067                           ;	unspecified, using default values
  1068                           ;	Code Protection Block 0
  1069                           ;	CP0 = 0x1, unprogrammed default
  1070                           ;	Code Protection Block 1
  1071                           ;	CP1 = 0x1, unprogrammed default
  1072                           ;	Code Protection Block 2
  1073                           ;	CP2 = 0x1, unprogrammed default
  1074                           ;	Code Protection Block 3
  1075                           ;	CP3 = 0x1, unprogrammed default
  1076   300008                     	org	3145736
  1077   300008  0F                 	db	15
  1078                           
  1079                           ;Config register CONFIG5H @ 0x300009
  1080                           ;	unspecified, using default values
  1081                           ;	Boot Block Code Protection bit
  1082                           ;	CPB = 0x1, unprogrammed default
  1083                           ;	Data EEPROM Code Protection bit
  1084                           ;	CPD = 0x1, unprogrammed default
  1085   300009                     	org	3145737
  1086   300009  C0                 	db	192
  1087                           
  1088                           ;Config register CONFIG6L @ 0x30000A
  1089                           ;	unspecified, using default values
  1090                           ;	Write Protection Block 0
  1091                           ;	WRT0 = 0x1, unprogrammed default
  1092                           ;	Write Protection Block 1
  1093                           ;	WRT1 = 0x1, unprogrammed default
  1094                           ;	Write Protection Block 2
  1095                           ;	WRT2 = 0x1, unprogrammed default
  1096                           ;	Write Protection Block 3
  1097                           ;	WRT3 = 0x1, unprogrammed default
  1098   30000A                     	org	3145738
  1099   30000A  0F                 	db	15
  1100                           
  1101                           ;Config register CONFIG6H @ 0x30000B
  1102                           ;	unspecified, using default values
  1103                           ;	Configuration Register Write Protection bit
  1104                           ;	WRTC = 0x1, unprogrammed default
  1105                           ;	Boot Block Write Protection bit
  1106                           ;	WRTB = 0x1, unprogrammed default
  1107                           ;	Data EEPROM Write Protection bit
  1108                           ;	WRTD = 0x1, unprogrammed default
  1109   30000B                     	org	3145739
  1110   30000B  E0                 	db	224
  1111                           
  1112                           ;Config register CONFIG7L @ 0x30000C
  1113                           ;	unspecified, using default values
  1114                           ;	Table Read Protection Block 0
  1115                           ;	EBTR0 = 0x1, unprogrammed default
  1116                           ;	Table Read Protection Block 1
  1117                           ;	EBTR1 = 0x1, unprogrammed default
  1118                           ;	Table Read Protection Block 2
  1119                           ;	EBTR2 = 0x1, unprogrammed default
  1120                           ;	Table Read Protection Block 3
  1121                           ;	EBTR3 = 0x1, unprogrammed default
  1122   30000C                     	org	3145740
  1123   30000C  0F                 	db	15
  1124                           
  1125                           ;Config register CONFIG7H @ 0x30000D
  1126                           ;	unspecified, using default values
  1127                           ;	Boot Block Table Read Protection bit
  1128                           ;	EBTRB = 0x1, unprogrammed default
  1129   30000D                     	org	3145741
  1130   30000D  40                 	db	64
  1131                           tosu	equ	0xFFF
  1132                           tosh	equ	0xFFE
  1133                           tosl	equ	0xFFD
  1134                           stkptr	equ	0xFFC
  1135                           pclatu	equ	0xFFB
  1136                           pclath	equ	0xFFA
  1137                           pcl	equ	0xFF9
  1138                           tblptru	equ	0xFF8
  1139                           tblptrh	equ	0xFF7
  1140                           tblptrl	equ	0xFF6
  1141                           tablat	equ	0xFF5
  1142                           prodh	equ	0xFF4
  1143                           prodl	equ	0xFF3
  1144                           indf0	equ	0xFEF
  1145                           postinc0	equ	0xFEE
  1146                           postdec0	equ	0xFED
  1147                           preinc0	equ	0xFEC
  1148                           plusw0	equ	0xFEB
  1149                           fsr0h	equ	0xFEA
  1150                           fsr0l	equ	0xFE9
  1151                           wreg	equ	0xFE8
  1152                           indf1	equ	0xFE7
  1153                           postinc1	equ	0xFE6
  1154                           postdec1	equ	0xFE5
  1155                           preinc1	equ	0xFE4
  1156                           plusw1	equ	0xFE3
  1157                           fsr1h	equ	0xFE2
  1158                           fsr1l	equ	0xFE1
  1159                           bsr	equ	0xFE0
  1160                           indf2	equ	0xFDF
  1161                           postinc2	equ	0xFDE
  1162                           postdec2	equ	0xFDD
  1163                           preinc2	equ	0xFDC
  1164                           plusw2	equ	0xFDB
  1165                           fsr2h	equ	0xFDA
  1166                           fsr2l	equ	0xFD9
  1167                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_setup
    _setup->_enviarByte
    _enviarByte->_enviarNibble

Critical Paths under _isr_general in COMRAM

    _isr_general->i2_enviarByte
    i2_enviarByte->i2_enviarNibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr_general in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr_general in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_general in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr_general in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr_general in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr_general in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr_general in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr_general in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr_general in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr_general in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr_general in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr_general in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr_general in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr_general in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr_general in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr_general in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     150
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0     150
                                              9 COMRAM     1     1      0
                         _enviarByte
                       _enviarNibble
 ---------------------------------------------------------------------------------
 (2) _enviarByte                                           1     1      0      90
                                              8 COMRAM     1     1      0
                       _enviarNibble
 ---------------------------------------------------------------------------------
 (2) _enviarNibble                                         3     3      0      60
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr_general                                          1     1      0     155
                                              4 COMRAM     1     1      0
                       i2_enviarByte
 ---------------------------------------------------------------------------------
 (5) i2_enviarByte                                         1     1      0     132
                                              3 COMRAM     1     1      0
                     i2_enviarNibble
 ---------------------------------------------------------------------------------
 (6) i2_enviarNibble                                       3     3      0      88
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _enviarByte
       _enviarNibble
     _enviarNibble

 _isr_general (ROOT)
   i2_enviarByte
     i2_enviarNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      45        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      A       B       1       11.7%
BITBIGSFRlhhhh      5C      0       0      38        0.0%
BITBIGSFRllhh       45      0       0      42        0.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRh           D      0       0      37        0.0%
BITBIGSFRlhl         A      0       0      41        0.0%
BITBIGSFRlhhl        6      0       0      40        0.0%
BITBIGSFRllhl        1      0       0      43        0.0%
BITBIGSFRlhhhl       1      0       0      39        0.0%
BITBIGSFRlll         1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B      28        0.0%
DATA                 0      0       B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon May 27 13:07:40 2024

     i2enviarNibble@dato 0003                       l30 11FE                       l61 11E4  
                     l29 11FE                       l55 11B0                       l58 10A4  
                     u37 116A                       u47 107C                       u57 1096  
                    l741 1072                      l743 108A                      l745 108C  
                    l737 1004                      l761 114C                      l739 1070  
                    l747 11D4                      l771 1162                      l763 115A  
                    l781 1184                      l773 1164                      l765 115C  
                    l791 11A2                      l783 118A                      l775 1172  
                    l767 115E                      l759 114A                      l793 11A8  
                    l785 1190                      l777 1178                      l769 1160  
                    l795 11AE                      l787 1196                      l779 117E  
                    l789 119C                      l799 11FA                      wreg 0FE8  
                   i2l52 0108                     i2l61 11F8                     i2l39 0106  
                   i2l58 1148                     _main 11FA                     btemp 000C  
                   start 010C             ___param_bank 0000                    ?_main 0001  
                  i2l841 10A8                    i2l843 1114                    i2l851 11E8  
                  i2l845 1116                    i2l861 002C                    i2l853 000A  
                  i2l847 112E                    i2l871 005E                    i2l863 0036  
                  i2l855 000E                    i2l849 1130                    i2l881 0096  
                  i2l873 0068                    i2l865 0040                    i2l857 0018  
                  i2l883 009A                    i2l875 0072                    i2l867 004A  
                  i2l859 0022                    i2l891 00A8                    i2l885 009C  
                  i2l877 007C                    i2l869 0054                    i2l887 00A2  
                  i2l879 008E                    _PORTB 0F81                    _TRISB 0F93  
                  _TRISD 0F95                    _linea 000B                    _setup 114A  
          ?_enviarNibble 0001                    tablat 0FF5                    ttemp5 000D  
                  ttemp6 0010                    ttemp7 0014                    status 0FD8  
                  wtemp8 000D          __initialization 11B2             ?_isr_general 0001  
           __end_of_main 1206                   ??_main 000B            __activetblptr 0002  
         enviarByte@dato 0009         ??i2_enviarNibble 0001           ??_enviarNibble 0006  
                 ?_setup 0001                   _ANSELB 0F39                   _ANSELD 0F3B  
                 i2u2_40 008E                   i2u2_41 008A                   i2u6_47 1120  
                 i2u7_47 113A             i2_enviarByte 11E6                   isa$std 0001  
           __pdataCOMRAM 000B             __mediumconst 0000                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 11C4            ___rparam_used 0001           __pcstackCOMRAM 0001  
          __end_of_setup 11B2                  ??_setup 000A     __end_of_enviarNibble 10A6  
             _enviarByte 11D2                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 1000                  __pcinit 11B2                  __ramtop 1000  
                __ptext0 11FA                  __ptext1 114A                  __ptext2 11D2  
                __ptext3 1002                  __ptext5 11E6                  __ptext6 10A6  
   end_of_initialization 11C4            __Lmediumconst 0000              ?_enviarByte 0001  
          __pidataCOMRAM 1206      start_initialization 11B2             _enviarNibble 1002  
       enviarNibble@dato 0008            ??_isr_general 0005                __pintcode 0008  
            __smallconst 1000                 _LATDbits 0F8C            ?i2_enviarByte 0001  
    __end_of_isr_general 010C           i2_enviarNibble 10A6           ??i2_enviarByte 0004  
           ??_enviarByte 0009                 __Hrparam 0000                 __Lrparam 0000  
     __end_of_enviarByte 11E6   __end_ofi2_enviarNibble 114A              _isr_general 0008  
               isa$xinst 0000                 int$flags 000C          isr_general@dato 0005  
             _INTCONbits 0FF2                 intlevel2 0000          ?i2_enviarNibble 0001  
   __end_ofi2_enviarByte 11FA         i2enviarByte@dato 0004  
